name: 50 DAST Scan Docker Image
on:
  workflow_dispatch:
  workflow_call:

env:
# used for docker
  REGISTRY: jotamariodev
  IMAGE_NAME: ${{ github.repository }}

jobs:

  dast-scan:
      #contents: read # for actions/checkout to fetch code
      #security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      #actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
      #missing only package:read?
    name: DAST Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - name: Get image name and version from package.json
        id: pkg
        run: |
          echo "FRONTEND_IMAGE=$(jq -r .name frontend/package.json)" >> $GITHUB_ENV
          echo "FRONTEND_VERSION=$(jq -r .version frontend/package.json)" >> $GITHUB_ENV
      
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - run: docker rm quizApp | true && docker run -d -p 3000:3000 --name quizApp ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE}}:${{ env.FRONTEND_VERSION }}         

      - name: wait for container to start
        run: timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000)" != "200" ]]; do sleep 5; done' || false

      - name: test container
        run: curl -s localhost:3000/
     
      - name: Run ZAP OWASP full scan
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          docker_name: 'zaproxy/zap-stable'
          token: ${{ secrets._GITHUB_TOKEN }}
          target: 'http://localhost:3000'
          cmd_options: '-a -j -l WARN -z "-addoninstallall" '
          allow_issue_writing: true

      - name: Upload html report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: DAST_Report.html
          path: report_html.html

      - name: stop docker
        if: always()
        run: |
          docker stop quizApp && docker rm quizApp && docker container prune --force && docker image prune --force